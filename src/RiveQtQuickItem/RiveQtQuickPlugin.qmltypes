import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "riveqtquickitem.h"
        name: "RiveQtQuickItem"
        accessSemantics: "reference"
        defaultProperty: "data"
        parentProperty: "parent"
        prototype: "QQuickItem"
        exports: ["RiveQtQuickPlugin/RiveQtQuickItem 1.0"]
        exportMetaObjectRevisions: [256]
        Enum {
            name: "LoadingStatus"
            values: ["Idle", "Loading", "Loaded", "Error"]
        }
        Property {
            name: "fileSource"
            type: "QString"
            read: "fileSource"
            write: "setFileSource"
            notify: "fileSourceChanged"
            index: 0
        }
        Property {
            name: "loadingStatus"
            type: "LoadingStatus"
            read: "loadingStatus"
            notify: "loadingStatusChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "artboards"
            type: "ArtBoardInfo"
            isList: true
            read: "artboards"
            notify: "artboardsChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "animations"
            type: "AnimationInfo"
            isList: true
            read: "animations"
            notify: "animationsChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "stateMachines"
            type: "StateMachineInfo"
            isList: true
            read: "stateMachines"
            notify: "stateMachinesChanged"
            index: 4
            isReadonly: true
        }
        Property {
            name: "currentArtboardIndex"
            type: "int"
            read: "currentArtboardIndex"
            write: "setCurrentArtboardIndex"
            notify: "currentArtboardIndexChanged"
            index: 5
        }
        Property {
            name: "currentStateMachineIndex"
            type: "int"
            read: "currentStateMachineIndex"
            write: "setCurrentStateMachineIndex"
            notify: "currentStateMachineIndexChanged"
            index: 6
        }
        Property {
            name: "interactive"
            type: "bool"
            read: "interactive"
            write: "setInteractive"
            notify: "interactiveChanged"
            index: 7
        }
        Property {
            name: "stateMachineInterface"
            type: "RiveQtStateMachineInputMap"
            isPointer: true
            read: "stateMachineInterface"
            notify: "stateMachineInterfaceChanged"
            index: 8
            isReadonly: true
        }
        Property {
            name: "renderQuality"
            type: "RiveRenderSettings::RenderQuality"
            read: "renderQuality"
            write: "setRenderQuality"
            notify: "renderQualityChanged"
            index: 9
        }
        Property {
            name: "fillMode"
            type: "RiveRenderSettings::FillMode"
            read: "fillMode"
            write: "setFillMode"
            notify: "fillModeChanged"
            index: 10
        }
        Signal { name: "animationsChanged" }
        Signal { name: "artboardsChanged" }
        Signal { name: "stateMachinesChanged" }
        Signal { name: "fileSourceChanged" }
        Signal { name: "loadingStatusChanged" }
        Signal { name: "currentArtboardIndexChanged" }
        Signal { name: "currentStateMachineIndexChanged" }
        Signal { name: "interactiveChanged" }
        Signal { name: "internalArtboardChanged" }
        Signal { name: "internalStateMachineChanged" }
        Signal { name: "stateMachineInterfaceChanged" }
        Signal { name: "renderQualityChanged" }
        Signal { name: "fillModeChanged" }
        Method { name: "updateStateMachineInputMap" }
        Method {
            name: "triggerAnimation"
            Parameter { name: "id"; type: "int" }
        }
    }
}
